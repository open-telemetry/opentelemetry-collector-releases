name: Reusable release workflow

on:
  workflow_call:
    inputs:
      distribution:
        required: true
        type: string
      goos:
        required: true
        type: string
      goarch:
        required: true
        type: string
      runner_os:
        required: false
        type: string
        default: ubuntu-24.04

env:
  # renovate: datasource=github-tags depName=goreleaser-pro packageName=goreleaser/goreleaser-pro
  GORELEASER_PRO_VERSION: v2.7.0

jobs:
  prepare:
    strategy:
      matrix:
        GOOS: ${{ fromJSON(inputs.goos) }}
        GOARCH: ${{ fromJSON(inputs.goarch) }}
        exclude:
          - GOOS: darwin
            GOARCH: "386"
          - GOOS: darwin
            GOARCH: s390x
          - GOOS: darwin
            GOARCH: ppc64le
          - GOOS: darwin
            GOARCH: arm
    runs-on: ${{ inputs.runner_os }}

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - uses: anchore/sbom-action/download-syft@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        if: runner.os != 'Windows'
        with:
          platforms: arm64,ppc64le,linux/arm/v7,s390x

      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
        if: runner.os != 'Windows'

        # Fix slow Go compile and cache restore
        # See https://github.com/actions/setup-go/pull/515
      - name: Fix slow setup-go cache restore in Windows
        if: runner.os == 'Windows'
        run: |
          echo "GOCACHE=D:\gocache" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "GOMODCACHE=D:\gomodcache" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "GOTMPDIR=D:\gotmp" | Out-File -FilePath $env:GITHUB_ENV -Append
          mkdir D:\gotmp

      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "~1.24"
          check-latest: true

      - name: Generate distribution sources
        run: make generate-sources

      - name: Log into Docker.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Package Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create artifacts directory to store build artifacts
        if: inputs.distribution == 'otelcol-contrib'
        shell: bash
        run: mkdir -p distributions/otelcol-contrib/artifacts

        # otelcol-contrib is built in a separate stage
      - name: Build ${{ inputs.distribution }}
        if: inputs.distribution == 'otelcol-contrib'
        uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          workdir: distributions/${{ inputs.distribution }}
          args: release --clean --split --timeout 2h --config .goreleaser-build.yaml --release-header-tmpl=../../.github/release-template.md
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          GOARM: "7" # Default is 6
          GOAMD64: v1
          GOPPC64: power8
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          COSIGN_YES: true

      - name: Move built artifacts
        if: inputs.distribution == 'otelcol-contrib'
        shell: bash
        run: mv distributions/otelcol-contrib/dist/**/* distributions/otelcol-contrib/artifacts/

      - name: Show built or downloaded content
        if: inputs.distribution == 'otelcol-contrib'
        shell: bash
        run: ls -laR distributions/otelcol-contrib/artifacts

      - uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          workdir: distributions/${{ inputs.distribution }}
          args: release --clean --split --timeout 2h --release-header-tmpl=../../.github/release-template.md
        env:
          GOOS: ${{ matrix.GOOS }}
          GOARCH: ${{ matrix.GOARCH }}
          GOARM: 7 # Default is 6
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          COSIGN_YES: true
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: artifacts-${{ inputs.distribution }}-${{ matrix.GOOS }}-${{ matrix.GOARCH }}
          path: distributions/${{ inputs.distribution }}/dist/**/*
          if-no-files-found: error

  release:
    name: ${{ inputs.distribution }} Release
    runs-on: ${{ inputs.runner_os }}
    needs: prepare

    permissions:
      id-token: write
      packages: write
      contents: write

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1

      - uses: anchore/sbom-action/download-syft@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0.18.0

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        if: runner.os != 'Windows'
        with:
          platforms: arm64,ppc64le,s390x

      - uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3.10.0
        if: runner.os != 'Windows'

        # Fix slow Go compile and cache restore
        # See https://github.com/actions/setup-go/pull/515
      - name: Fix slow setup-go cache restore in Windows
        if: runner.os == 'Windows'
        run: |
          echo "GOCACHE=D:\gocache" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "GOMODCACHE=D:\gomodcache" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "GOTMPDIR=D:\gotmp" | Out-File -FilePath $env:GITHUB_ENV -Append
          mkdir D:\gotmp

      - uses: actions/setup-go@0aaccfd150d50ccaeb58ebd88d36e91967a5f35b # v5.4.0
        with:
          go-version: "~1.24"
          check-latest: true

      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        if: runner.os == 'Windows'
        with:
          pattern: artifacts-${{ inputs.distribution }}-windows-*
          path: distributions/${{ inputs.distribution }}/dist
          merge-multiple: true

      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        if: runner.os != 'Windows'
        with:
          pattern: artifacts-${{ inputs.distribution }}-darwin-*
          path: distributions/${{ inputs.distribution }}/dist
          merge-multiple: true

      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        if: runner.os != 'Windows'
        with:
          pattern: artifacts-${{ inputs.distribution }}-linux-*
          path: distributions/${{ inputs.distribution }}/dist
          merge-multiple: true

      - name: Display structure of downloaded files
        shell: bash
        run: ls -R distributions/${{ inputs.distribution }}/dist

      - name: Log into Docker.io
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Package Registry
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: goreleaser/goreleaser-action@90a3faa9d0182683851fbfa97ca1a2cb983bfca3 # v6.2.1
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          workdir: distributions/${{ inputs.distribution }}
          args: continue --merge --timeout 2h
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_YES: true
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
