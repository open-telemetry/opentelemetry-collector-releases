name: Nightly Release

on:
  workflow_dispatch:
  schedule:
    - cron: "0 2 * * *" # release nightly at 2AM

permissions:
  contents: read

env:
  # renovate: datasource=github-tags depName=goreleaser-pro packageName=goreleaser/goreleaser-pro
  GORELEASER_PRO_VERSION: v2.11.0

jobs:
  nightly-release:
    name: Nightly Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        id: otelbot-token
        with:
          app-id: ${{ vars.OTELBOT_COLLECTOR_RELEASES_APP_ID }}
          private-key: ${{ secrets.OTELBOT_COLLECTOR_RELEASES_PRIVATE_KEY }}

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          token: ${{ steps.otelbot-token.outputs.token }}

      - name: 'Push new tag'
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"

          # A previous release was created using a lightweight tag
          # git describe by default includes only annotated tags
          # git describe --tags includes lightweight tags as well
          DESCRIBE=`git tag -l --sort=-v:refname | grep -v cmd | grep -v nightly | head -n 1` # list tags except the ones containing cmd or nightly and then take the latest one
          MAJOR_VERSION=`echo $DESCRIBE | awk '{split($0,a,"."); print a[1]}'` # take just the major version digits, e.g. "v0"
          MINOR_VERSION=`echo $DESCRIBE | awk '{split($0,a,"."); print a[2]}'` # take just the minor version digits, e.g. "130"
          MINOR_VERSION="$((${MINOR_VERSION} + 1))" # bump minor version
          TAG="${MAJOR_VERSION}.${MINOR_VERSION}.0-nightly.$(date +'%Y%m%d%H%M')"
          git tag -a $TAG -m "$TAG: nightly build"
          git push origin $TAG
