name: CI - Other Binaries

on:
  workflow_call:
    inputs:
      binary:
        required: true
        type: string
        description: "Which binary to build. Possible options: ['builder', 'opampsupervisor']"
      collector-dependency:
        required: false
        type: string
        default: ""
        description: "Set this to the repo slug of collector core or contrib to check out if it's needed as a dependency"
      dependency-target-folder:
        required: false
        type: string
        default: ""
        description: "The collector dependency will be put into this folder"
      linux-packages:
        required: false
        type: boolean
        default: false
        description: "Set to true if linux packages should be uploaded as an artifact"

permissions:
  contents: read

env:
  # renovate: datasource=github-releases packageName=goreleaser/goreleaser-pro
  GORELEASER_PRO_VERSION: v2.12.5

jobs:
  check-goreleaser:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Releases Repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Checkout Collector dependency repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          repository: ${{ inputs.collector-dependency }}
          path: ${{ inputs.dependency-target-folder }}

      - name: Copy Dockerfile to Core Repo directory
        run: cp cmd/${{ inputs.binary }}/Dockerfile ${{ inputs.dependency-target-folder }}/cmd/${{ inputs.binary }}/Dockerfile

      - uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      - uses: anchore/sbom-action/download-syft@f8bdd1d8ac5e901a77a92f111440fdb1b593736b # v0.20.6

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: amd64,arm64,ppc64le,riscv64

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Setup Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
        with:
          go-version: "~1.25.0"

      - name: Check GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          args: check --verbose -f cmd/${{ inputs.binary }}/.goreleaser.yaml
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          args: --snapshot --clean -f cmd/${{ inputs.binary }}/.goreleaser.yaml --skip sign
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_YES: false

      - name: Print built artifacts
        run: cat ./cmd/${{ inputs.binary }}/dist/**/artifacts.json

      - name: Print metadata
        run: cat ./cmd/${{ inputs.binary }}/dist/**/metadata.json

      - name: Print dist folder contents
        if: always()
        run: ls -laR ./cmd/${{ inputs.binary }}/dist

      - name: Upload linux service packages
        if: ${{ inputs.linux-packages == true }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: linux-packages
          path: cmd/${{ inputs.binary }}/dist/linux_amd64_v1/*
          if-no-files-found: error
