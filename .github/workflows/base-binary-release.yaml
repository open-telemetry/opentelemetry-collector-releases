name: Reusable binary release workflow
on:
  workflow_call:
    inputs:
      binary:
        required: true
        type: string
        description: "Which binary to release. Possible options: ['builder', 'opampsupervisor']"
      collector-dependency:
        required: false
        type: string
        default: ""
        description: "Set this to the repo slug of collector core or contrib to check out if it's needed as a dependency"
      dependency-target-folder:
        required: false
        type: string
        default: ""
        description: "The collector dependency will be put into this folder"

env:
  # renovate: datasource=github-releases packageName=goreleaser/goreleaser-pro
  GORELEASER_PRO_VERSION: v2.12.2

permissions:
  contents: read

jobs:
  goreleaser:
    runs-on: ubuntu-24.04

    permissions:
      id-token: write
      packages: write
      contents: write

    steps:
      - name: Checkout Releases Repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0

      - name: Set COLLECTOR_REF
        id: collector-ref
        run: |
          if [ '${{ contains(github.ref, '-nightly') }}' == 'true' ]; then
            echo "COLLECTOR_REF=main" >> "$GITHUB_OUTPUT"
          else
            echo "COLLECTOR_REF=${{ github.ref }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Push ${{ inputs.binary }} Tag
        run: |
          tag="cmd/${{ inputs.binary }}/${{ github.ref_name }}"
          message="Releasing ${{ inputs.binary }} binaries for ${{ steps.collector-ref.outputs.COLLECTOR_REF }}"
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "${tag}" -m "${message}"
          git push origin "${tag}"

      - name: Set goreleaser last tag reference in case of non-nightly release
        id: prev-tag
        if: ${{ !contains(github.ref, '-nightly') }}
        # find previous tag by taking only binary tags, filtering out nightly tags and then choosing the
        # second to last tag (last one is the current release)
        run: |
          prev_tag=$(git tag | grep "cmd/${{ inputs.binary }}" | grep -v "nightly" | sort -r --version-sort | head -n 2 | tail -n 1)
          current_tag="cmd/${{ inputs.binary }}/${{ github.ref_name }}"
          echo "PREVIOUS_RELEASE_TAG=$prev_tag" >> "$GITHUB_OUTPUT"
          echo "CURRENT_TAG=$current_tag" >> "$GITHUB_OUTPUT"

      - name: Set nightly enabled
        id: nightly-check
        if: ${{ contains(github.ref, '-nightly') }}
        run: |
          echo "NIGHTLY_FLAG=--nightly" >> "$GITHUB_OUTPUT"

      - name: Checkout Collector dependency repo
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
          repository: ${{ inputs.collector-dependency }}
          ref: ${{ steps.collector-ref.outputs.COLLECTOR_REF }}
          path: ${{ inputs.dependency-target-folder }}

      - name: Copy Dockerfile to Collector dependency directory
        run: cp cmd/${{ inputs.binary }}/Dockerfile ${{ inputs.dependency-target-folder }}/cmd/${{ inputs.binary }}/Dockerfile

      - uses: sigstore/cosign-installer@d7543c93d881b35a8faa02e8e3605f69b7a1ce62 # v3.10.0

      - uses: anchore/sbom-action/download-syft@f8bdd1d8ac5e901a77a92f111440fdb1b593736b # v0.20.6

      - uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0
        with:
          platforms: amd64,arm64,ppc64le,riscv64

      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "~1.24"

      - name: Log into Docker.io
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN_COLLECTOR_RELEASES }}

      - name: Login to GitHub Package Registry
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3.5.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          distribution: goreleaser-pro
          version: ${{ env.GORELEASER_PRO_VERSION }}
          args: release --clean -f cmd/${{ inputs.binary }}/.goreleaser.yaml ${{ steps.nightly-check.outputs.NIGHTLY_FLAG }}
        env:
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_YES: true
          GORELEASER_PREVIOUS_TAG: ${{ steps.prev-tag.outputs.PREVIOUS_RELEASE_TAG }}
          GORELEASER_CURRENT_TAG: ${{ steps.prev-tag.outputs.CURRENT_TAG }}
