partial:
  by: target
version: 2
project_name: opentelemetry-collector-releases
env:
  - COSIGN_YES=true
builds:
  - id: otelcol-k8s
    goos:
      - linux
    goarch:
      - amd64
      - arm64
      - ppc64le
      - s390x
    dir: _build
    binary: otelcol-k8s
    ldflags:
      - -s
      - -w
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
archives:
  - id: otelcol-k8s
    builds:
      - otelcol-k8s
    name_template: '{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}{{ if .Mips }}_{{ .Mips }}{{ end }}'
checksum:
  name_template: '{{ .ProjectName }}_otelcol-k8s_checksums.txt'
dockers:
  - goos: linux
    goarch: amd64
    dockerfile: Dockerfile
    image_templates:
      - otel/opentelemetry-collector-k8s:{{ .Version }}-amd64
      - otel/opentelemetry-collector-k8s:latest-amd64
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}-amd64
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest-amd64
    build_flag_templates:
      - --pull
      - --platform=linux/amd64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=org.opencontainers.image.licenses=Apache-2.0
    use: buildx
  - goos: linux
    goarch: arm64
    dockerfile: Dockerfile
    image_templates:
      - otel/opentelemetry-collector-k8s:{{ .Version }}-arm64
      - otel/opentelemetry-collector-k8s:latest-arm64
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}-arm64
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest-arm64
    build_flag_templates:
      - --pull
      - --platform=linux/arm64
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=org.opencontainers.image.licenses=Apache-2.0
    use: buildx
  - goos: linux
    goarch: ppc64le
    dockerfile: Dockerfile
    image_templates:
      - otel/opentelemetry-collector-k8s:{{ .Version }}-ppc64le
      - otel/opentelemetry-collector-k8s:latest-ppc64le
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}-ppc64le
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest-ppc64le
    build_flag_templates:
      - --pull
      - --platform=linux/ppc64le
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=org.opencontainers.image.licenses=Apache-2.0
    use: buildx
  - goos: linux
    goarch: s390x
    dockerfile: Dockerfile
    image_templates:
      - otel/opentelemetry-collector-k8s:{{ .Version }}-s390x
      - otel/opentelemetry-collector-k8s:latest-s390x
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}-s390x
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest-s390x
    build_flag_templates:
      - --pull
      - --platform=linux/s390x
      - --label=org.opencontainers.image.created={{.Date}}
      - --label=org.opencontainers.image.name={{.ProjectName}}
      - --label=org.opencontainers.image.revision={{.FullCommit}}
      - --label=org.opencontainers.image.version={{.Version}}
      - --label=org.opencontainers.image.source={{.GitURL}}
      - --label=org.opencontainers.image.licenses=Apache-2.0
    use: buildx
docker_manifests:
  - name_template: otel/opentelemetry-collector-k8s:{{ .Version }}
    image_templates:
      - otel/opentelemetry-collector-k8s:{{ .Version }}-amd64
      - otel/opentelemetry-collector-k8s:{{ .Version }}-arm64
      - otel/opentelemetry-collector-k8s:{{ .Version }}-ppc64le
      - otel/opentelemetry-collector-k8s:{{ .Version }}-s390x
  - name_template: otel/opentelemetry-collector-k8s:latest
    image_templates:
      - otel/opentelemetry-collector-k8s:latest-amd64
      - otel/opentelemetry-collector-k8s:latest-arm64
      - otel/opentelemetry-collector-k8s:latest-ppc64le
      - otel/opentelemetry-collector-k8s:latest-s390x
  - name_template: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}
    image_templates:
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}-amd64
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}-arm64
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}-ppc64le
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:{{ .Version }}-s390x
  - name_template: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest
    image_templates:
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest-amd64
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest-arm64
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest-ppc64le
      - ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-k8s:latest-s390x
signs:
  - cmd: cosign
    args:
      - sign-blob
      - --output-signature
      - ${artifact}.sig
      - --output-certificate
      - ${artifact}.pem
      - ${artifact}
    signature: ${artifact}.sig
    artifacts: all
    certificate: ${artifact}.pem
docker_signs:
  - args:
      - sign
      - ${artifact}
    artifacts: all
sboms:
  - id: archive
    artifacts: archive
  - id: package
    artifacts: package
monorepo:
  tag_prefix: v
